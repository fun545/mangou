<template>
  <div :class="[isCode ? activeClass : '' ]" @click="getCode" v-html="text"></div>
</template>

<script>
  export default {
    props: {
      activeClass: String,
      phone: {
        type: String,
        required: true
      },
      postPath: {
        type: String,
        default: '/path/phone-get-code'
      },
      codeTime: {
        type: Number,
        default: 60
      }
    },
    data () {
      return {
        isCode: false,
        text: '获取验证码'
      }
    },
    methods: {
      getCode () {
        if (this.isCode) {
          return this.$vux.alert.show({content: '请勿重复获取验证码'})
        }

        if (!/^1[34578]\d{9}$/.test(this.phone)) {
          return this.$vux.alert.show({content: '请输入正确的手机号码'})
        } else {
          this.isCode = true
        }

        this.$http.post(this.postPath, {phone: this.phone}).then(res => {
          res.data.code === 100 ? this.$vux.alert.show({content: '获取验证码成功'}) : this.$vux.alert.show({content: '获取验证码失败'})
        }, () => {
          this.$vux.alert.show({content: '访问服务器出错'})
        })
      }
    },
    watch: {
      isCode (val) {
        if (!val) {
          this.text = '获取验证码'
          return
        }

        let codeTime = this.codeTime
        let interVal = setInterval(() => {
          if (--codeTime) {
            this.text = `${codeTime}S重新获取`
          } else {
            this.isCode = false
            clearInterval(interVal)
          }
        }, 1000)
      }
    }
  }
</script>
